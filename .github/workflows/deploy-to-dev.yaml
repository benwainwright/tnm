name: Deploy to dev
on:
  push:
    branches:
      - develop

jobs:
  unit-test:
    name: Unit test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Configure node 12
        uses: actions/setup-node@v1
        with:
          node-version: "12"
      - uses: actions/cache@v2
        with:
          path: "**/.yarn"
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}
      - name: Yarn install
        uses: borales/actions-yarn@v2.3.0
        with:
          cmd: install
      - name: Test
        uses: borales/actions-yarn@v2.3.0
        with:
          cmd: test:ci
      - uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }} # not required for public repos
          directory: coverage
          flags: unittests
          verbose: true

  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Configure node 12
        uses: actions/setup-node@v1
        with:
          node-version: "12"
      - uses: actions/cache@v2
        with:
          path: "**/.yarn"
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}
      - name: Yarn install
        uses: borales/actions-yarn@v2.3.0
        with:
          cmd: install
      - name: Lint
        uses: borales/actions-yarn@v2.3.0
        with:
          cmd: lint
  deploy:
    name: Deploy
    needs: [unit-test, lint]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v1
      - name: Configure node 12
        uses: actions/setup-node@v1
        with:
          node-version: "12"
      - uses: actions/cache@v2
        with:
          path: "**/.yarn"
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}
      - name: Yarn install
        uses: borales/actions-yarn@v2.3.0
        with:
          cmd: install
      - name: Turnstyle
        uses: softprops/turnstyle@v1
        with:
          poll-interval-seconds: 30
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Deploy Backend
        uses: borales/actions-yarn@v2.3.0
        with:
          cmd: deploy:backend
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: us-east-1

      - name: Deploy Frontend
        uses: borales/actions-yarn@v2.3.0
        with:
          cmd: deploy:frontend
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: us-east-1
      - name: Get Cloudfront distribution ID
        run: echo "CLOUDFRONT_ID=$(cat src/frontend-outputs.json | jq --raw-output '.[].CloudFrontDistributionId')" > $GITHUB_ENV
      - name: Invalidate Cloudfront cache
      - uses: chrislennon/action-aws-cli@v1.1
      - run: aws cloudfront create-invalidation --distribution-id $CLOUDFRONT_ID --paths "/index.html"
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: us-east-1
