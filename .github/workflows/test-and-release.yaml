name: Test and release
concurrency:
  group: release
  cancel-in-progress: true

on:
  push:
    branches:
      - main
    paths-ignore:
      - "**.md"

jobs:
  build-and-deploy-e2e-backend:
    name: Build and Deploy E2E Backend
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Configure node 14
        uses: actions/setup-node@v1
        with:
          node-version: "14"
      - name: Yarn install
        run: yarn install
      - name: Build
        run: yarn build:backend

      - name: Move build output
        run: mv dist/bundles/backend backend

      - name: Generate empty build folder
        run: mkdir build && touch build/file

      - uses: actions/upload-artifact@v2
        with:
          name: backend
          path: backend

      - name: Deploy CI Backend
        run: yarn deploy:backend:ci
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_KEY_ID_BACKEND }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_KEY_BACKEND }}
          AWS_REGION: us-east-1

      - uses: actions/upload-artifact@v2
        with:
          name: outputs
          path: backend-outputs.json

  build-and-deploy-int-backend:
    name: Build and Deploy Int Backend
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Configure node 14
        uses: actions/setup-node@v1
        with:
          node-version: "14"
      - name: Yarn install
        run: yarn install
      - name: Build
        run: yarn build:backend

      - name: Generate empty build folder
        run: mkdir build && touch build/file

      - name: Deploy CI Backend
        run: yarn deploy:backend:int
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_KEY_ID_BACKEND }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_KEY_BACKEND }}
          AWS_REGION: us-east-1

      - uses: actions/upload-artifact@v2
        with:
          name: outputs
          path: backend-outputs.json

  e2e-tests:
    name: Run E2E Tests
    needs: [build-and-deploy-backend, build-frontend]
    runs-on: ubuntu-latest
    container:
      image: cypress/base
    steps:
      - name: Checkout repository
        uses: actions/checkout@v1
      - name: Install Cypress deps
        run: apt-get install -y libgtk2.0-0 libgtk-3-0 libgbm-dev libnotify-dev libgconf-2-4 libnss3 libxss1 libasound2 libxtst6 xauth xvfb
      - name: Configure node 12
        uses: actions/setup-node@v1
        with:
          node-version: "14"

      - name: Yarn install
        run: yarn install

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn config get cacheFolder)"

      - name: Download Frontend
        uses: actions/download-artifact@v2
        with:
          name: build
          path: build

      - name: Download Backend Config
        uses: actions/download-artifact@v2
        with:
          name: outputs

      - name: Run E2E Tests
        run: yarn cypress:run

  cleanup-ci-backend-stack:
    name: Cleanup CI Backend Stack
    needs: [e2e-tests]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Configure node 14
        uses: actions/setup-node@v1
        with:
          node-version: "14"
      - name: Yarn install
        run: yarn install

      - name: Generate empty build folder
        run: mkdir build && touch build/file && mkdir backend && touch backend/file

      - name: Destroy CI Backend stack
        run: yarn destroy:backend:ci
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_KEY_ID_BACKEND }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_KEY_BACKEND }}
          AWS_REGION: us-east-1

  cleanup-int-backend-stack:
    name: Cleanup CI Backend Stack
    needs: [build-and-deploy-int-backend]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Configure node 14
        uses: actions/setup-node@v1
        with:
          node-version: "14"
      - name: Yarn install
        run: yarn install

      - name: Generate empty build folder
        run: mkdir build && touch build/file && mkdir backend && touch backend/file

      - name: Destroy CI Backend stack
        run: yarn destroy:backend:int
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_KEY_ID_BACKEND }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_KEY_BACKEND }}
          AWS_REGION: us-east-1

  build-frontend:
    name: Build Frontend
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Configure node 14
        uses: actions/setup-node@v1
        with:
          node-version: "14"
      - name: Yarn install
        run: yarn install
      - name: Build
        run: yarn build:frontend
        env:
          DISABLE_ESLINT_PLUGIN: 'true'
          DISABLE_TYPE_CHECKS: 'true'


      - uses: actions/upload-artifact@v2
        with:
          name: build
          path: build

  types:
    name: Check types
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Configure node 14
        uses: actions/setup-node@v1
        with:
          node-version: "14"
      - name: Yarn install
        run: yarn install
      - name: Types
        run: yarn tsc

  unit-test:
    name: Unit test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Configure node 14
        uses: actions/setup-node@v1
        with:
          node-version: "14"
      - name: Yarn install
        run: yarn install
      - name: Test
        run: yarn test:ci
      - uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }} # not required for public repos
          directory: coverage
          flags: unittests
          verbose: true

  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Configure node 12
        uses: actions/setup-node@v1
        with:
          node-version: "14"
      - name: Yarn install
        run: yarn install
      - name: Lint
        run: yarn lint
        env:
          NODE_OPTIONS: --max_old_space_size=4096

  cdk-synth:
    name: Generate Cloudformation
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Configure node 14
        uses: actions/setup-node@v1
        with:
          node-version: "14"

      - name: Yarn install
        run: yarn install

      - name: Make empty build folder
        run: mkdir build && touch build/file && mkdir backend && touch backend/file

      - name: Synth
        run: yarn cdk synth *

        env:
          DEPLOYMENT_ENVIRONMENT: prod
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: us-east-1

  codeql:
    name: CodeQL Analysis
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Initialize CodeQL
      uses: github/codeql-action/init@v1
      with:
        languages: ${{ matrix.language }}

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v1

  release:
    name: Release Package
    needs: 
    - lint
    - build-and-deploy-int-backend
    - unit-test
    - types
    - e2e-tests
    - cdk-synth
    - codeql

    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Configure node 14
        uses: actions/setup-node@v1
        with:
          node-version: "14"

      - name: Yarn install
        run: yarn install

      - name: Download Backend
        uses: actions/download-artifact@v2
        with:
          name: backend
          path: backend

      - name: Download Frontend
        uses: actions/download-artifact@v2
        with:
          name: build
          path: build

      - name: Release Package
        run: yarn semantic-release
        env:
          NPM_TOKEN: ${{ secrets.GH_TOKEN }}
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
