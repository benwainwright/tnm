schema {
  query: Query
  mutation: Mutation
}

type Customer {
  address: String!
  breakfast: Boolean!
  daysPerWeek: Int!
  email: String!
  exclusions: [Exclusion!]!
  firstName: String!
  id: ID!
  legacyPrice: Int
  newPlan: CustomerPlan
  notes: String
  pauseEnd: AWSDateTime
  pauseStart: AWSDateTime
  paymentDayOfMonth: Int
  plan: Plan!
  salutation: String!
  snack: String!
  startDate: AWSDateTime
  surname: String!
  telephone: String!
}

type CustomerPlan {
  configuration: PlanConfiguration
  deliveries: [Delivery!]!
}

type Delivery {
  extras: [DeliveryItem!]!
  items: [DeliveryItem!]!
}

type DeliveryItem {
  name: String!
  quantity: Int!
}

type Exclusion {
  allergen: Boolean!
  customers: [Customer!]!
  id: ID!
  name: String!
  recipes: [Recipe!]!
}

type Mutation {
  createCustomer(input: CustomerInput): Customer @aws_auth(cognito_groups : ["user", "admin"])
  createExclusion(input: ExclusionInput): Exclusion @aws_auth(cognito_groups : ["user", "admin"])
  createRecipe(input: RecipeInput): Recipe @aws_auth(cognito_groups : ["user", "admin"])
  deleteCustomer(input: DeleteCustomerInput): String @aws_auth(cognito_groups : ["user", "admin"])
  deleteExclusion(input: DeleteExclusionInput): String @aws_auth(cognito_groups : ["user", "admin"])
  deleteRecipe(input: DeleteRecipeInput): String @aws_auth(cognito_groups : ["user", "admin"])
  updateCustomer(input: UpdateCustomerInput): Customer @aws_auth(cognito_groups : ["user", "admin"])
  updateExclusion(input: UpdateExclusionInput): Exclusion @aws_auth(cognito_groups : ["user", "admin"])
  updateRecipe(input: UpdateRecipeInput): Recipe @aws_auth(cognito_groups : ["user", "admin"])
}

type Plan {
  category: String!
  costPerMeal: Int!
  mealsPerDay: Int!
  name: String!
}

type PlanConfiguration {
  daysPerWeek: Int!
  deliveryDays: [String!]!
  extrasChosen: [String!]!
  mealsPerDay: Int!
  planType: String!
  totalPlans: Int!
}

type Query {
  getCustomerById(customerId: String!): Customer @aws_auth(cognito_groups : ["user", "admin"])
  getExclusionById(exclusionId: String!): Exclusion @aws_auth(cognito_groups : ["user", "admin"])
  getRecipeById(recipeId: String!): Recipe @aws_auth(cognito_groups : ["user", "admin"])
  listCustomers: [Customer] @aws_auth(cognito_groups : ["user", "admin"])
  listExclusions: [Exclusion] @aws_auth(cognito_groups : ["user", "admin"])
  listRecipes: [Recipe] @aws_auth(cognito_groups : ["user", "admin"])
}

type Recipe {
  description: String
  hotOrCold: String!
  id: ID!
  name: String!
  potentialExclusions: [Exclusion!]!
  shortName: String!
}

input CustomerInput {
  address: String!
  breakfast: Boolean!
  daysPerWeek: Int!
  email: String!
  exclusionIds: [String!]!
  firstName: String!
  legacyPrice: Int
  newPlan: CustomerPlanInput
  notes: String
  pauseEnd: AWSDateTime
  pauseStart: AWSDateTime
  paymentDayOfMonth: Int
  plan: PlanInput!
  salutation: String!
  snack: String!
  startDate: AWSDateTime
  surname: String!
  telephone: String!
}

input CustomerPlanInput {
  configuration: PlanConfigurationInput
  deliveries: [DeliveryInput!]!
}

input DeleteCustomerInput {
  id: ID!
}

input DeleteExclusionInput {
  id: ID!
}

input DeleteRecipeInput {
  id: ID!
}

input DeliveryInput {
  extras: [DeliveryItemInput!]!
  items: [DeliveryItemInput!]!
}

input DeliveryItemInput {
  name: String!
  quantity: Int!
}

input ExclusionInput {
  allergen: Boolean!
  name: String!
}

input PlanConfigurationInput {
  daysPerWeek: Int!
  deliveryDays: [String!]!
  extrasChosen: [String!]!
  mealsPerDay: Int!
  planType: String!
  totalPlans: Int!
}

input PlanInput {
  category: String!
  costPerMeal: Int!
  mealsPerDay: Int!
  name: String!
}

input RecipeInput {
  description: String
  exclusionIds: [ID!]!
  hotOrCold: String!
  name: String!
  shortName: String!
}

input UpdateCustomerInput {
  address: String!
  breakfast: Boolean!
  daysPerWeek: Int!
  email: String!
  exclusionIds: [String!]!
  firstName: String!
  id: ID!
  legacyPrice: Int
  newPlan: CustomerPlanInput
  notes: String
  pauseEnd: AWSDateTime
  pauseStart: AWSDateTime
  paymentDayOfMonth: Int
  plan: PlanInput!
  salutation: String!
  snack: String!
  startDate: AWSDateTime
  surname: String!
  telephone: String!
}

input UpdateExclusionInput {
  allergen: Boolean!
  id: ID!
  name: String!
}

input UpdateRecipeInput {
  description: String
  exclusionIds: [ID!]!
  hotOrCold: String!
  id: ID!
  name: String!
  shortName: String!
}
